
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1146002
     - Topic: Stress at work
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Stress at work
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1146004
     - Topic: Workplace Environment
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workplace Environment
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1173001
     - Topic: Remote working experience
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Remote working experience
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1173002
     - Topic: End of working relationship
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on End of working relationship
-------------------
-------------------
[LLM ANSWER]
 {
"data" : {
"TF_QUESTIONNAIRES" : [
 {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : [
 {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES"
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1173003
     - Topic: Onboarding
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Onboarding
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1173004
     - Topic: Manager feedback
     - Question number: 3
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Manager feedback
-------------------
-------------------
[LLM ANSWER]
 JSON:

{































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1173005
     - Topic: Employee feedback
     - Question number: 4
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee feedback
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1213249
     - Topic: Training effectiveness
     - Question number: 2
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Training effectiveness
-------------------
-------------------
[LLM ANSWER]
 JSON:

{
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1433792
     - Topic: Career path
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career path
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTION": {

-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 5100002
     - Topic: Training to professional users
     - Question number: 12
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Training to professional users
-------------------
-------------------
[LLM ANSWER]
 {
"data" {
"TF_QUESTIONNAIRES" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
" questions" {
"
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 5100003
     - Topic: Learner feedback after a course session
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Learner feedback after a course session
-------------------
-------------------
[LLM ANSWER]
 JSON:

{































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500000002
     - Topic: Employee experience
     - Question number: 16
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee experience
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "CODE": "
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500000003
     - Topic: Employee potential
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee potential
-------------------
-------------------
[LLM ANSWER]
 JSON:

{































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500000005
     - Topic: Course feedback
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Course feedback
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNA
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100002
     - Topic: Access to Technology and Tools
     - Question number: 9
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Access to Technology and Tools
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100003
     - Topic: Access to Technology and Tools
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Access to Technology and Tools
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100004
     - Topic: Access to Technology and Tools
     - Question number: 9
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Access to Technology and Tools
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100005
     - Topic: Access to Technology and Tools
     - Question number: 11
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Access to Technology and Tools
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100006
     - Topic: Benefits
     - Question number: 9
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Benefits
-------------------
-------------------
[LLM ANSWER]
 JSON:

{
 "data":
{
 "TF_QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTIONNAIRES":
{
 "QUESTION
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100007
     - Topic: Career development
     - Question number: 14
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career development
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTION": [
  {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_QUESTION": {
  "TF_
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100008
     - Topic: Career Path Clarity
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career Path Clarity
-------------------
-------------------
[LLM ANSWER]
 JSON:

{































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100009
     - Topic: Career Path Clarity
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career Path Clarity
-------------------
-------------------
[LLM ANSWER]
 JSON:

{































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100010
     - Topic: Career Path Clarity
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career Path Clarity
-------------------
-------------------
[LLM ANSWER]
 JSON:

{































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100011
     - Topic: Career Path Clarity
     - Question number: 9
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career Path Clarity
-------------------
-------------------
[LLM ANSWER]
 JSON:

{































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100012
     - Topic: Employee motivation
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee motivation
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100013
     - Topic: Employee Performance
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee Performance
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100014
     - Topic: Employee Potential
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee Potential
-------------------
-------------------
[LLM ANSWER]
 JSON:

{































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100015
     - Topic: Feedback Mechanisms
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Feedback Mechanisms
-------------------
-------------------
[LLM ANSWER]
 {
"data" : {
"TF_QUESTIONNAIRES" : [
 {
"CODE" :"Q_TF_QUESTIONNAIRES_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODE_CODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODECODE
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100016
     - Topic: Feedback Mechanisms
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Feedback Mechanisms
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100017
     - Topic: Feedback Mechanisms
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Feedback Mechanisms
-------------------
-------------------
[LLM ANSWER]
 {
"data" : {
"TF_QUESTIONNAIRES" : [
 {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : [
 {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES"
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100018
     - Topic: Feedback Mechanisms
     - Question number: 9
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Feedback Mechanisms
-------------------
-------------------
[LLM ANSWER]
 {
"data" : {
"TF_QUESTIONNAIRES" : [
 {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : [
 {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES" : {
"TF_QUESTIONNAIRES"
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100019
     - Topic: Health and Safety Measures
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Health and Safety Measures
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "CODE": "Q_ Health and Safety Measures_v_1.1.1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1111111111111111111111111111111
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100020
     - Topic: Health and Safety Measures
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Health and Safety Measures
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "CODE": "Q_ Health and Safety Measures_v_1.1.1_1111111111111111111111111111111
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100021
     - Topic: Health and Safety Measures
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Health and Safety Measures
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "CODE": "Q_ Health and Safety Measures_v_1.1.1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1111111111111111111111111111111
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100022
     - Topic: Health and Safety Measures
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Health and Safety Measures
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "CODE": "Q_ Health and Safety Measures_v_1.1.1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1111111111111111111111111111111
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100023
     - Topic: Internal Mobility Opportunities
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Internal Mobility Opportunities
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100024
     - Topic: Internal Mobility Opportunities
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Internal Mobility Opportunities
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100025
     - Topic: Internal Mobility Opportunities
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Internal Mobility Opportunities
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100026
     - Topic: Internal Mobility Opportunities
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Internal Mobility Opportunities
-------------------
-------------------
[LLM ANSWER]
 {
 "data": {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": [
 {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_QUESTIONNAIRES": {
 "TF_
-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100027
     - Topic: Job Satisfaction
     - Question number: 17
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Job Satisfaction
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100028
     - Topic: Kick-off Meeting Feedback
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Kick-off Meeting Feedback
-------------------
-------------------
[LLM ANSWER]
 JSON:

{































-------------------
=================================================================
0-SHOT
With only the questionnaire TOPIC
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100029
     - Topic: Leadership Effectiveness
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire about a specified topic.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Leadership Effectiveness
-------------------
-------------------
[LLM ANSWER]
