
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1146002
     - Topic: Stress at work
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Stress at work with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTION": {
  "TF_QUESTION_QUESTION": "I 






























-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1146004
     - Topic: Workplace Environment
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workplace Environment with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {
  "QUESTION_QUESTION": "I 






























-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1173001
     - Topic: Remote working experience
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Remote working experience with 10 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q10001000010000000000000000000000000000000
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1173002
     - Topic: End of working relationship
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on End of working relationship with 10 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q00001000010000000000000000000000000000000
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1173003
     - Topic: Onboarding
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Onboarding with 6 questions
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1173004
     - Topic: Manager feedback
     - Question number: 3
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Manager feedback with 3 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNA
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1173005
     - Topic: Employee feedback
     - Question number: 4
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee feedback with 4 questions
-------------------
-------------------
[LLM ANSWER]
 JSON































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1213249
     - Topic: Training effectiveness
     - Question number: 2
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Training effectiveness with 2 questions
-------------------
-------------------
[LLM ANSWER]
 JSON































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 1433792
     - Topic: Career path
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career path with 10 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {
  "QUESTION_1": {
  "QUESTION_1": {
  "QUESTION": "1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1111111111111111111111111111111
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 5100002
     - Topic: Training to professional users
     - Question number: 12
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Training to professional users with 12 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTION": {
  "QUESTION_1": {
  "QUESTION": "1. 1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1..1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1..1.1.1.1..1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 5100003
     - Topic: Learner feedback after a course session
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Learner feedback after a course session with 8 questions
-------------------
-------------------
[LLM ANSWER]
 JSON































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500000002
     - Topic: Employee experience
     - Question number: 16
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee experience with 16 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
  "QUESTION": {
 
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500000003
     - Topic: Employee potential
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee potential with 8 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_Q
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500000005
     - Topic: Course feedback
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Course feedback with 5 questions
-------------------
-------------------
[LLM ANSWER]
 JSON































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100002
     - Topic: Access to Technology and Tools
     - Question number: 9
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Access to Technology and Tools with 9 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100003
     - Topic: Access to Technology and Tools
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Access to Technology and Tools with 10 questions
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100004
     - Topic: Access to Technology and Tools
     - Question number: 9
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Access to Technology and Tools with 9 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100005
     - Topic: Access to Technology and Tools
     - Question number: 11
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Access to Technology and Tools with 11 questions
-------------------
-------------------
[LLM ANSWER]
 JSON































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100006
     - Topic: Benefits
     - Question number: 9
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Benefits with 9 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100007
     - Topic: Career development
     - Question number: 14
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career development with 14 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100008
     - Topic: Career Path Clarity
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career Path Clarity with 10 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q0000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001_1000100001
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100009
     - Topic: Career Path Clarity
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career Path Clarity with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTION": {
  "TF_QUESTION_QUESTION": "I feel 1111111111111111111111111111111
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100010
     - Topic: Career Path Clarity
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career Path Clarity with 10 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q00001_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000000000_1000
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100011
     - Topic: Career Path Clarity
     - Question number: 9
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Career Path Clarity with 9 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q_9999999999999999999999999999999
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100012
     - Topic: Employee motivation
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee motivation with 5 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTION": {
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION": "I feel motivated to do my best to achieve my 
  "TF_QUESTION_QUESTION":
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100013
     - Topic: Employee Performance
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee Performance with 10 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIIRES": [
  {
  "CODE": "Q00001000010000000000000000000000000000000
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100014
     - Topic: Employee Potential
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Employee Potential with 10 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {
  "QUESTION_CODE": "Q0000000000000000000000000000000
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100015
     - Topic: Feedback Mechanisms
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Feedback Mechanisms with 6 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100016
     - Topic: Feedback Mechanisms
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Feedback Mechanisms with 5 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTION": {
  "TF_QUESTION_QUESTION": "I find the 1111111111111111111111111111111
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100017
     - Topic: Feedback Mechanisms
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Feedback Mechanisms with 7 questions
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100018
     - Topic: Feedback Mechanisms
     - Question number: 9
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Feedback Mechanisms with 9 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100019
     - Topic: Health and Safety Measures
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Health and Safety Measures with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100020
     - Topic: Health and Safety Measures
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Health and Safety Measures with 5 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q_5555555555555555555555555555555
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100021
     - Topic: Health and Safety Measures
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Health and Safety Measures with 6 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100022
     - Topic: Health and Safety Measures
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Health and Safety Measures with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100023
     - Topic: Internal Mobility Opportunities
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Internal Mobility Opportunities with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100024
     - Topic: Internal Mobility Opportunities
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Internal Mobility Opportunities with 6 questions
-------------------
-------------------
[LLM ANSWER]
 JSON































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100025
     - Topic: Internal Mobility Opportunities
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Internal Mobility Opportunities with 8 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100026
     - Topic: Internal Mobility Opportunities
     - Question number: 10
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Internal Mobility Opportunities with 10 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q00001_10000000000000000000000000000000
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100027
     - Topic: Job Satisfaction
     - Question number: 17
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Job Satisfaction with 17 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTIONNAIRES_17Q_17Q_QUESTION
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100028
     - Topic: Kick-off Meeting Feedback
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Kick-off Meeting Feedback with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {
  "TF_QUESTION": {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100029
     - Topic: Leadership Effectiveness
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Leadership Effectiveness with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q_ Leadership Effectiveness_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100030
     - Topic: Leadership Effectiveness
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Leadership Effectiveness with 6 questions
-------------------
-------------------
[LLM ANSWER]
 JSON:

{
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100031
     - Topic: Leadership Effectiveness
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Leadership Effectiveness with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q_ Leadership Effectiveness_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100032
     - Topic: Leadership Effectiveness
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Leadership Effectiveness with 8 questions
-------------------
-------------------
[LLM ANSWER]
 JSON































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100033
     - Topic: Onboarding Experience
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Onboarding Experience with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100034
     - Topic: Onboarding Experience
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Onboarding Experience with 6 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100035
     - Topic: Onboarding Experience
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Onboarding Experience with 6 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100036
     - Topic: Onboarding Experience
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Onboarding Experience with 8 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTION": {
  "QUESTION_QUESTION": "QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION_QUESTION
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100037
     - Topic: Pressure at work
     - Question number: 14
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Pressure at work with 14 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {
  "QUESTION_QUESTION": "I 






























-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100038
     - Topic: Quality of Diversity Training Programs
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Quality of Diversity Training Programs with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100039
     - Topic: Recognition and Rewards
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Recognition and Rewards with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q_RE_RE_7Q_RE_RE_QUESTIONNAIRE_CODE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RE_RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100040
     - Topic: Recognition and Rewards
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Recognition and Rewards with 6 questions
-------------------
-------------------
[LLM ANSWER]
 JSON































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100041
     - Topic: Recognition and Rewards
     - Question number: 11
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Recognition and Rewards with 11 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q1_1_1111111111111111111111111111111
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100042
     - Topic: Recognition and Rewards
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Recognition and Rewards with 8 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100043
     - Topic: Roadmap planning feedback
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Roadmap planning feedback with 5 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {
  "QUESTION_CODE": "
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100044
     - Topic: Satisfaction
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Satisfaction with 5 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100045
     - Topic: Smart working
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Smart working with 6 questions
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100046
     - Topic: Teambuilding initiatives feedback
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Teambuilding initiatives feedback with 6 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100047
     - Topic: Training and Development Programs
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Training and Development Programs with 5 questions
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100048
     - Topic: Training and Development Programs
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Training and Development Programs with 8 questions
-------------------
-------------------
[LLM ANSWER]
 JSON:

{
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
  "data":
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100049
     - Topic: Training and Development Programs
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Training and Development Programs with 6 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100050
     - Topic: Training and Development Programs
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Training and Development Programs with 5 questions
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100051
     - Topic: WorkLife Balance
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on WorkLife Balance with 6 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNAIRES": {
  "TF_QUESTIONNA
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100052
     - Topic: WorkLife Balance
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on WorkLife Balance with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTION": {
  "QUESTION_QUESTION": "I  





























-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100053
     - Topic: WorkLife Balance
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on WorkLife Balance with 8 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q_Life_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAIRES_CODE_8_QUESTIONNAI
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100054
     - Topic: WorkLife Balance
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on WorkLife Balance with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "CODE": "Q_Life
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100055
     - Topic: Workload Management
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workload Management with 6 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100056
     - Topic: Workload Management
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workload Management with 5 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {

-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100057
     - Topic: Workload Management
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workload Management with 7 questions
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100058
     - Topic: Workload Management
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workload Management with 7 questions
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100059
     - Topic: Workplace Culture
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workplace Culture with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTION": {
  "QUESTION": "IQUESTION 1111111111111111111111111111111
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100060
     - Topic: Workplace Culture
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workplace Culture with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": [
  {
  "QUESTION": {
  "QUESTION_QUESTION": "I 






























-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100061
     - Topic: Workplace Culture
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workplace Culture with 6 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTION": {
  "QUESTION": "I 






























-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100062
     - Topic: Workplace Culture
     - Question number: 8
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workplace Culture with 8 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES": {
  "QUESTIONNAIRES
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100063
     - Topic: Workplace Environment
     - Question number: 6
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workplace Environment with 6 questions
-------------------
-------------------
[LLM ANSWER]
 JSON:































-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100064
     - Topic: Workplace Environment
     - Question number: 5
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workplace Environment with 5 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTION": {
  "QUESTION_QUESTION": "I 






























-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100065
     - Topic: Workplace Environment
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workplace Environment with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTION": {
  "QUESTION_QUESTION": "I 3333333333333333333333333333333
-------------------
=================================================================
0-SHOT
With FULL questionnaire parameters
=================================================================

-------------------
[TEST] QUESTIONNAIRE_ID: 500100066
     - Topic: Workplace Environment
     - Question number: 7
-------------------
[PROMPTS]
     - System: 
You are a Questionnaire Generator in the Human Resource Management field.
The user will ask you to generate a questionnaire specifying the topic and the number of questions.
If the user does not specify a valid topic, reply with "Sorry I cant help you".
If the topic is valid, reply with only a JSON, which must respect the following format:
        - The root of the JSON is an object that contains a single property 'data'.
        - The 'data' property is an object that contains a single property 'TF_QUESTIONNAIRES'.
        - 'TF_QUESTIONNAIRES' is an array of only one element, which represents a questionnaire. It has the following properties:
            - 'CODE': (string) the questionnaire's code.
            - 'NAME': (string) the questionnaire's name.
            - 'TYPE_ID': (int) which is equal to 3.
            - '_TF_QUESTIONS': An array of objects, each representing a question.
        - Each question in the '_TF_QUESTIONS' array has the following properties:
            - 'CODE': (string) the question's unique code.
            - 'NAME': (string) the question's content.
            - 'TYPE_ID': (int) the question's type.
            - 'DISPLAY_ORDER': (int) the question's display order.
            - '_TF_ANSWERS': An array of objects, each representing a possible answer to the question.
        - Each answer object in the '_TF_ANSWERS' array has a single property 'ANSWER', which is a string representing the content of the answer.
The admitted question's types are the following: 
  - ID: 1, DESCRIPTION: Use this type of question to choose one answer from a list.
  - ID: 2, DESCRIPTION: Use this type of question to choose one or more answer from a list.
  - ID: 3, DESCRIPTION: Use this type of question to rate something.
  - ID: 4, DESCRIPTION: Use this type of question to aquire feedback.
  - ID: 5, DESCRIPTION: Use this type of question to reorder items.
  - ID: 6, DESCRIPTION: Use this type of question to disribute weights across several items/options.
  - ID: 7, DESCRIPTION: Use this type of question to clone questions from a template.
  - ID: 8, DESCRIPTION: Use this type of question when the answer to be given is a date or a date/time.
Be creative and vary the syntax of your questions to enhance user engagement. Reply only with the JSON.
     - User: 
Generate me a questionnaire on Workplace Environment with 7 questions
-------------------
-------------------
[LLM ANSWER]
 {
  "data": {
  "TF_QUESTIONNAIRES": [
  {
  "TF_QUESTIONNAIRES": {
  "QUESTIONNAIRES": [
  {
  "QUESTIONNAIRES": {
  "QUESTION": {
  "QUESTION_QUESTION": "QUESTION_QUESTION": "I 






























-------------------